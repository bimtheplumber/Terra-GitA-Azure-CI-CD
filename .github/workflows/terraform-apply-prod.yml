#Name of the wokflow
name: 'Production - Terraform Apply'
# The workflow will be trigered On push to main branch to Production folder. 
on:
  push:
    branches:
      - main
    paths:
      - Production/**


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: Production
    env:
      ARM_CLIENT_ID: ${{secrets.TF_VAR_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.TF_VAR_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.TF_VAR_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TF_VAR_TENANT_ID}}
      ARM_STORAGE_USE_AZUREAD: true
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: "Production/"


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.7

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform apply
      run: terraform apply -auto-approve


     